<?xml version="1.0"?>
<!-- This file is part of the book                    -->
<!--                                                  -->
<!-- Abstract Algebra: Theory and Applications        -->
<!--                                                  -->
<!-- Text: Copyright (C) 1997-2024  Thomas W. Judson  -->
<!-- Sage: Copyright (C) 2010-2024  Robert A. Beezer  -->
<!-- See the file COPYING for copying conditions.     -->
<!-- This file is part of the book                    -->
<!--                                                  -->
<!-- See the file COPYING for copying conditions.     -->
<chapter xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="integers">
  <title>The Integers</title>
  <introduction>
    <p>
      The integers are the building blocks of mathematics.
      In this chapter we will investigate the fundamental properties of the integers,
      including mathematical induction,
      the division algorithm, and the Fundamental Theorem of Arithmetic.
    </p>
  </introduction>

  <section xml:id="integers-section-math-induction">
    <title>Mathematical Induction</title>
    <p>
      Suppose we wish to show that
      <me>
        1 + 2 + \cdots + n = \frac{n(n + 1)}{2}
      </me>
      for any natural number <m>n</m>.
      This formula is easily  verified for small numbers such as <m>n = 1</m>,
      <m>2</m>, <m>3</m>, or <m>4</m>,
      but it is impossible to verify for all natural numbers on a case-by-case basis.
      To prove the formula true in general,
      a more generic method is required.
    </p>

    <p>
      Suppose we have verified the equation for the first <m>n</m> cases.
      We will attempt to show that we can generate the formula for the <m>(n + 1)</m>th case from this knowledge.
      The formula is true for <m>n = 1</m> since
      <me>
        1 = \frac{1(1 + 1)}{2}
      </me>.
      If we have verified the first <m>n</m> cases, then
      <md>
        <mrow>1 + 2 + \cdots + n + (n + 1) &amp; = \frac{n(n + 1)}{2} + n + 1</mrow>
        <mrow>&amp; = \frac{n^2 + 3n + 2}{2}</mrow>
        <mrow>&amp; = \frac{(n + 1)[(n + 1) + 1]}{2}</mrow>
      </md>.
      This is exactly the formula for the <m>(n + 1)</m>th case.
    </p>

    <p>
      This method of proof is known as
      <term>mathematical induction</term>.
      Instead of attempting to verify a statement about some subset <m>S</m> of the positive integers
      <m>{\mathbb N}</m> on a case-by-case basis,
      an impossible task if <m>S</m> is an infinite set,
      we give a specific proof for the smallest integer being considered,
      followed by a generic argument showing that if the statement holds for a given case,
      then it must also hold for the next case in the sequence.
      We summarize mathematical induction in the following axiom.
    </p>

    <principle xml:id="integers-principle-first-pmi">
      <title>First Principle of Mathematical Induction</title>
      <idx>
      <h>Induction</h>
      <h>first principle of</h>
      </idx>
      <statement>
        <p>
          Let <m>S(n)</m> be a statement about integers for
          <m>n \in {\mathbb N}</m> and suppose <m>S(n_0)</m> is true for some integer <m>n_0</m>.
          If for all integers <m>k</m> with <m>k \geq n_0</m>,
          <m>S(k)</m> implies that <m>S(k+1)</m> is true,
          then <m>S(n)</m> is true for all integers <m>n</m> greater than or equal to <m>n_0</m>.
        </p>
      </statement>
    </principle>
        <!-- wording change.  Suggested by P. Diethelm.  TWJ 22/4/2013 -->
    <example xml:id="integers-example-induction-greater-than">
      <p>
        For all integers <m>n \geq 3</m>, <m>2^n \gt n + 4</m>.
        Since
        <me>
          8 = 2^3 \gt 3 + 4 = 7
        </me>,
        the statement is true for <m>n_0 = 3</m>.
        Assume that <m>2^k \gt k + 4</m> for <m>k \geq 3</m>.
        Then <m>2^{k + 1} = 2 \cdot 2^{k} \gt 2(k + 4)</m>.
        But
        <me>
          2(k + 4) = 2k + 8 \gt k + 5 = (k + 1) + 4
        </me>
        since <m>k</m> is positive.
        Hence, by induction,
        the statement holds for all integers <m>n \geq 3</m>.
      </p>
    </example>

    <example xml:id="integers-example-induction-divisible">
      <p>
        Every integer <m>10^{n + 1} + 3 \cdot 10^n + 5</m> is divisible by <m>9</m> for <m>n \in {\mathbb N}</m>.
        For <m>n = 1</m>,
        <me>
          10^{1 + 1} + 3 \cdot 10 + 5 = 135 = 9 \cdot 15
        </me>
        is divisible by <m>9</m>.
        Suppose that <m>10^{k + 1} + 3 \cdot 10^k + 5</m> is divisible by <m>9</m> for <m>k \geq 1</m>.
        Then
        <md>
          <mrow>10^{(k + 1) + 1} + 3 \cdot 10^{k + 1} + 5&amp; = 10^{k + 2} + 3 \cdot 10^{k + 1} + 50 - 45</mrow>
          <mrow>&amp; = 10 (10^{k + 1} + 3 \cdot 10^{k} + 5) - 45</mrow>
        </md>
        is divisible by <m>9</m>.
      </p>
    </example>

    <example xml:id="integers-example-binomial-theorem">
      <p>
        We will prove the binomial theorem using mathematical induction; that is,
        <me>
          (a + b)^n = \sum_{k = 0}^{n} \binom{n}{k} a^k b^{n - k}
        </me>,
        where <m>a</m> and <m>b</m> are real numbers,
        <m>n \in \mathbb{N}</m>, and
        <me>
          \binom{n}{k} = \frac{n!}{k! (n - k)!}
        </me>
        is the binomial coefficient.

        <notation>
          <usage><m>n!</m></usage>
          <description><m>n</m> factorial</description>
        </notation>

        <notation>
          <usage><m>\binom{n}{k}</m></usage>
          <description>binomial coefficient <m>n!/(k!(n-k)!)</m></description>
        </notation>

        We first show that
        <me>
          \binom{n + 1}{k} = \binom{n}{k} + \binom{n}{k - 1}
        </me>.
        This result follows from
        <md>
          <mrow>\binom{n}{k} + \binom{n}{k - 1} &amp; = \frac{n!}{k!(n - k)!} +\frac{n!}{(k-1)!(n - k + 1)!}</mrow>
          <mrow>&amp; = \frac{(n + 1)!}{k!(n + 1 - k)!}</mrow>
          <mrow>&amp; =\binom{n + 1}{k}</mrow>
        </md>.
        If <m>n = 1</m>, the binomial theorem is easy to verify.
        Now assume that the result is true for <m>n</m> greater than or equal to <m>1</m>.
        Then
        <md>
          <mrow>(a + b)^{n + 1} &amp; = (a + b)(a + b)^n</mrow>
          <mrow>&amp; = (a + b) \left( \sum_{k = 0}^{n} \binom{n}{k} a^k b^{n - k}\right)</mrow>
          <mrow>&amp; = \sum_{k = 0}^{n} \binom{n}{k} a^{k + 1} b^{n - k} + \sum_{k = 0}^{n} \binom{n}{k} a^k b^{n + 1 - k}</mrow>
          <mrow>&amp; = a^{n + 1} + \sum_{k = 1}^{n} \binom{n}{k - 1} a^{k} b^{n + 1 - k} + \sum_{k = 1}^{n} \binom{n}{k}  a^k b^{n + 1 - k} + b^{n + 1}</mrow>
          <mrow>&amp;  = a^{n + 1} + \sum_{k = 1}^{n} \left[ \binom{n}{k - 1} + \binom{n}{k} \right]a^k b^{n + 1 - k} + b^{n + 1}</mrow>
          <mrow>&amp;  = \sum_{k = 0}^{n + 1}   \binom{n + 1}{k} a^k b^{n + 1- k}</mrow>
        </md>.
      </p>
    </example>

    <p>
      We have an equivalent statement of the Principle of Mathematical Induction that is often very useful.
    </p>

    <principle xml:id="integers-principle-second-pmi">
      <title>Second Principle of Mathematical Induction</title>
      <idx>
      <h>Induction</h>
      <h>second principle of</h>
      </idx>
      <statement>
        <p>
          Let <m>S(n)</m> be a statement about integers for
          <m>n \in {\mathbb N}</m> and suppose <m>S(n_0)</m> is true for some integer <m>n_0</m>.
          If <m>S(n_0), S(n_0 + 1), \ldots, S(k)</m> imply that
          <m>S(k + 1)</m> for <m>k \geq n_0</m>,
          then the statement <m>S(n)</m> is true for all integers <m>n \geq n_0</m>.
        </p>
      </statement>
    </principle>
        <!-- wording change.  Suggested by P. Diethelm.  TWJ 22/4/2013 -->
    <p>
      A nonempty subset <m>S</m> of
      <m>{\mathbb Z}</m> is <term>well-ordered</term><idx><h>Well-ordered set</h></idx>
      if <m>S</m> contains a least element.
      Notice that the set <m>{\mathbb Z}</m> is not well-ordered since it does not contain a smallest element.
      However, the natural numbers are well-ordered.
    </p>

    <principle>
      <title>Principle of Well-Ordering</title>
      <statement>
        <p>
          Every nonempty subset of the natural numbers is well-ordered.
        </p>
      </statement>
    </principle>

    <p>
      The Principle of Well-Ordering is equivalent to the Principle of Mathematical Induction.
    </p>

    <lemma xml:id="integers-lemma-smallest-number">
      <statement>
        <p>
          The Principle of Mathematical Induction implies that <m>1</m> is the least positive natural number.
        </p>
      </statement>

      <proof>
        <p>
          Let <m>S = \{ n \in {\mathbb N} : n \geq 1 \}</m>.
          Then <m>1 \in S</m>.
          Assume that <m>n \in S</m>.
          Since <m>0 \lt 1</m>,
          it must be the case that <m>n = n + 0 \lt n + 1</m>.
          Therefore, <m>1 \leq n \lt n + 1</m>.
          Consequently, if <m>n \in S</m>,
          then <m>n + 1</m> must also be in <m>S</m>,
          and by the Principle of Mathematical Induction, and we have <m>S = \mathbb N</m>.
        </p>
      </proof>
    </lemma>
        <!--  Theorem reworded for clarity.  TWJ 12/17/2011 -->
        <!--  Suggested by K. Halasz and R. Beezer. -->
    <theorem xml:id="integers-theorem-pmi-implies-pwo">
      <statement>
        <p>
          The Principle of Mathematical Induction implies the Principle of Well-Ordering.
          That is, every nonempty subset of
          <m>\mathbb N</m> contains a least element.
        </p>
      </statement>

      <proof>
        <p>
          We must show that if <m>S</m> is a nonempty subset of the natural numbers,
          then <m>S</m> contains a least element.
          If <m>S</m> contains 1, then the theorem is true by <xref ref="integers-lemma-smallest-number"/>.
          Assume that if <m>S</m> contains an integer <m>k</m> such that <m>1 \leq k \leq n</m>,
          then <m>S</m> contains a least element.
          We will show that if a set <m>S</m> contains an integer less than or equal to <m>n + 1</m>,
          then <m>S</m> has a least element.
          If <m>S</m> does not contain an integer less than <m>n+1</m>,
          then <m>n+1</m> is the smallest integer in <m>S</m>.
          Otherwise, since <m>S</m> is nonempty,
          <m>S</m> must contain an integer less than or equal to <m>n</m>.
          In this case, by induction, <m>S</m> contains a least element.
        </p>
      </proof>
    </theorem>
        <!-- wording change.  Suggested by P. Diethelm.  TWJ 22/4/2013 -->
    <p>
      Induction can also be very useful in formulating definitions.
      For instance, there are two ways to define <m>n!</m>,
      the factorial of a positive integer <m>n</m>.

      <ul>
        <li>
          <p>
            The <em>explicit</em> definition:
            <m>n! = 1 \cdot 2 \cdot 3 \cdots (n - 1) \cdot n</m>.
          </p>
        </li>

        <li>
          <p>
            The <em>inductive</em> or <em>recursive</em> definition:
            <m>1! = 1</m> and <m>n! = n(n - 1)!</m> for <m>n \gt 1</m>.
          </p>
        </li>
      </ul>

      Every good mathematician or computer scientist knows that looking at problems recursively,
      as opposed to explicitly,
      often results in better understanding of complex issues.
    </p>
  </section>

  <section xml:id="integers-section-division-algorithm">
    <title>The Division Algorithm</title>
    <introduction>
      <p>
        An application of the Principle of Well-Ordering that we will use often is the division algorithm.
      </p>

      <theorem xml:id="integers-theorem-division_algorithm">
        <title>Division Algorithm</title>
        <idx>
        <h>Division algorithm</h>
        <h>for integers</h>
        </idx>
        <statement>
          <p>
            Let <m>a</m> and <m>b</m> be integers, with <m>b \gt 0</m>.
            Then there exist unique integers <m>q</m> and <m>r</m> such that
            <me>
              a = bq + r
            </me>
            where <m>0 \leq r \lt b</m>.
          </p>
        </statement>

        <proof>
          <p>
            This is a perfect example of the existence-and-uniqueness type of proof.
            We must first prove that the numbers <m>q</m> and <m>r</m> actually exist.
            Then we must show that if <m>q'</m> and <m>r'</m> are two other such numbers,
            then <m>q = q'</m> and <m>r = r'</m>.
          </p>

          <case>
            <title>Existence of <m>q</m> and <m>r</m></title>
            <p>
              Let
              <me>
                S = \{ a - bk : k \in {\mathbb Z} \text{ and } a - bk \geq 0 \}
              </me>.
              If <m>0 \in S</m>, then <m>b</m> divides <m>a</m>,
              and  we can let <m>q = a/b</m> and <m>r = 0</m>.
              If <m>0 \notin S</m>, we can use the Well-Ordering Principle.
              We must first show that <m>S</m> is nonempty.
              If <m>a \gt 0</m>, then <m>a - b \cdot 0 \in S</m>.
              If <m>a \lt 0</m>, then <m>a - b(2a) = a(1 - 2b) \in S</m>.
              In either case <m>S \neq \emptyset</m>.
              By the Well-Ordering Principle,
              <m>S</m> must have a smallest member, say <m>r = a - bq</m>.
              Therefore, <m>a = bq + r</m>, <m>r \geq 0</m>.
              We now show that <m>r \lt b</m>.
              Suppose that <m>r \gt b</m>.
              Then
              <me>
                a - b(q + 1)= a - bq - b = r - b \gt 0
              </me>.
              In this case we would have <m>a - b(q + 1)</m> in the set <m>S</m>.
              But then <m>a - b(q + 1) \lt a - bq</m>,
              which would contradict the fact that
              <m>r = a - bq</m> is the smallest member  of <m>S</m>.
              So <m>r \leq b</m>.
              Since <m>0 \notin S</m>, <m>r \neq b</m> and so <m>r \lt b</m>.
            </p>
          </case>

          <case>
            <title>Uniqueness of <m>q</m> and <m>r</m></title>
            <p>
              <em>Uniqueness of <m>q</m> and <m>r</m>.</em>
              Suppose there exist integers <m>r</m>, <m>r'</m>,
              <m>q</m>, and <m>q'</m> such that
              <me>
                a = bq + r, 0 \leq r \lt b \quad \text{and}\quad a = bq' + r', 0 \leq r' \lt b
              </me>.
              Then <m> bq + r =  bq' + r'</m>.
              Assume that <m>r' \geq r</m>.
              From the last equation we have <m>b(q - q') = r' - r</m>;
              therefore, <m>b</m> must divide <m>r' - r</m> and <m>0 \leq r'- r \leq r' \lt b</m>.
              This is possible only if <m>r' - r = 0</m>.
              Hence, <m>r = r'</m> and  <m>q = q'</m>.
            </p>
          </case>
        </proof>
      </theorem>

      <p>
        Let <m>a</m> and <m>b</m> be integers.
        If <m>b = ak</m> for some integer <m>k</m>, we write <m>a \mid b</m>.
        An integer <m>d</m> is called a
        <term>common divisor</term>
        of <m>a</m> and <m>b</m> if <m>d \mid a</m> and <m>d \mid b</m>.
        The <term>greatest common divisor</term><idx><h>Greatest common divisor</h><h>of two integers</h></idx> of integers <m>a</m> and <m>b</m> is a positive integer <m>d</m> such that <m>d</m> is a common divisor of <m>a</m> and <m>b</m> and if <m>d'</m> is any other common divisor of <m>a</m> and <m>b</m>,
        then <m>d' \mid d</m>.

        <notation>
          <usage><m>a \mid b</m></usage>
          <description><m>a</m> divides <m>b</m></description>
        </notation>

        <notation>
          <usage><m>\gcd(a, b)</m></usage>
          <description>greatest common divisor of <m>a</m> and <m>b</m></description>
        </notation>

        We write <m>d = \gcd(a, b)</m>;
        for example,
        <m>\gcd( 24, 36) = 12</m> and <m>\gcd(120, 102) = 6</m>.
        We say that two integers <m>a</m> and <m>b</m> are
        <term>relatively prime</term>
        if <m>\gcd( a, b ) = 1</m>.
      </p>

      <theorem xml:id="integers-theorem-gcd">
        <statement>
          <p>
            Let <m>a</m> and <m>b</m> be nonzero integers.
            Then there exist integers <m>r</m> and <m>s</m> such that
            <me>
              \gcd( a, b) = ar + bs
            </me>.
            Furthermore,
            the greatest common divisor of <m>a</m> and <m>b</m> is unique.
          </p>
        </statement>

        <proof>
          <p>
            Let
            <me>
              S = \{ am + bn : m, n \in {\mathbb Z} \text{ and } am + bn \gt 0 \}
            </me>.
            Clearly, the set <m>S</m> is nonempty;
            hence, by the Well-Ordering Principle <m>S</m> must have a smallest member,
            say <m>d = ar + bs</m>.
            We claim that <m>d = \gcd( a, b)</m>.
            Write <m>a = dq + r'</m> where <m>0 \leq r' \lt d</m>.
            If <m>r' \gt 0</m>,
            then <!-- r changed to r' - TWJ 1/31/2011 -->
            <md>
              <mrow>r'&amp; = a - dq</mrow>
              <mrow>&amp; = a - (ar + bs)q</mrow>
              <mrow>&amp; = a - arq - bsq</mrow>
              <mrow>&amp; = a( 1 - rq ) + b( -sq )</mrow>
            </md>,
            which is in <m>S</m>.
            But this would contradict the fact that <m>d</m> is the smallest member of <m>S</m>.
            Hence, <m>r' = 0</m> and <m>d</m> divides <m>a</m>.
            A similar argument shows that <m>d</m> divides <m>b</m>.
            Therefore, <m>d</m> is a common divisor of <m>a</m> and <m>b</m>.
          </p>

          <p>
            Suppose that <m>d'</m> is another common divisor of <m>a</m> and <m>b</m>,
            and we want to show that <m>d' \mid d</m>.
            If we let <m>a = d'h</m> and <m>b = d'k</m>, then
            <me>
              d = ar + bs = d'hr + d'ks = d'(hr + ks)
            </me>.
            So <m>d'</m> must divide <m>d</m>.
            Hence, <m>d</m> must be the unique greatest common divisor of <m>a</m> and <m>b</m>.
          </p>
        </proof>
            <!-- Notation error in proof fixed (pointed out by Rocco Rossi) - TWJ 9/13/2010 -->
      </theorem>

      <corollary xml:id="integers-corollary-coprime">
        <statement>
          <p>
            Let <m>a</m> and <m>b</m> be two integers that are relatively prime.
            Then there exist integers <m>r</m> and <m>s</m> such that <m>ar + bs = 1</m>.
          </p>
        </statement>
      </corollary>
    </introduction>

    <subsection xml:id="integers-subsection-euclidean-algorithm">
      <title>The Euclidean Algorithm</title>
      <p>
        Among other things, <xref ref="integers-theorem-gcd"/> allows us to compute the greatest common divisor of two integers.
      </p>

      <example xml:id="integers-example-gcd">
        <p>
          Let us compute the greatest common divisor of <m>945</m> and <m>2415</m>.
          First observe that
          <md>
            <mrow>2415 &amp; = 945 \cdot 2 + 525</mrow>
            <mrow>945 &amp; = 525 \cdot 1 + 420</mrow>
            <mrow>525 &amp; = 420 \cdot 1 + 105</mrow>
            <mrow>420 &amp; = 105 \cdot 4 + 0</mrow>
          </md>.
          Reversing our steps, <m>105</m> divides <m>420</m>,
          <m>105</m> divides <m>525</m>,
          <m>105</m> divides <m>945</m>,
          and <m>105</m> divides <m>2415</m>.
          Hence, <m>105</m> divides both <m>945</m> and <m>2415</m>.
          If <m>d</m> were another common divisor of <m>945</m> and <m>2415</m>,
          then <m>d</m> would also have to divide <m>105</m>.
          Therefore, <m>\gcd( 945, 2415 ) = 105</m>.
        </p>

        <p>
          If we work backward through the above sequence of equations,
          we can also obtain numbers <m>r</m> and <m>s</m> such that <m>945 r + 2415 s = 105</m>.
          Observe that
          <md>
            <mrow>105 &amp; = 525 + (-1) \cdot 420</mrow>
            <mrow>&amp; = 525 + (-1) \cdot [945 + (-1) \cdot 525]</mrow>
            <mrow>&amp; = 2 \cdot 525 + (-1) \cdot 945</mrow>
            <mrow>&amp; = 2 \cdot [2415 + (-2) \cdot 945] + (-1) \cdot 945</mrow>
            <mrow>&amp; = 2 \cdot 2415 + (-5) \cdot 945</mrow>
          </md>.
          So <m>r = -5</m> and <m>s= 2</m>.
          Notice that <m>r</m> and <m>s</m> are not unique,
          since <m>r = 41</m> and <m>s = -16</m> would also work.
        </p>
      </example>

      <p>
        To compute <m>\gcd(a,b) = d</m>,
        we are using repeated divisions to obtain a decreasing sequence of positive integers <m>r_1 \gt r_2 \gt \cdots \gt r_n = d</m>; that is,
        <md>
          <mrow>b &amp; = a q_1 + r_1</mrow>
          <mrow>a &amp; = r_1 q_2 + r_2</mrow>
          <mrow>r_1 &amp; = r_2 q_3 + r_3</mrow>
          <mrow>&amp; \vdots</mrow>
          <mrow>r_{n - 2} &amp; = r_{n - 1} q_{n} + r_{n}</mrow>
          <mrow>r_{n - 1} &amp; = r_n q_{n + 1}</mrow>
        </md>.
        To find <m>r</m> and <m>s</m> such that <m>ar + bs = d</m>,
        we begin with this last equation and substitute results obtained from the previous equations:
        <md>
          <mrow>d &amp; = r_n</mrow>
          <mrow>&amp; = r_{n - 2} - r_{n - 1} q_n</mrow>
          <mrow>&amp; = r_{n - 2} - q_n( r_{n - 3} - q_{n - 1} r_{n - 2} )</mrow>
          <mrow>&amp; = -q_n r_{n - 3} + ( 1+ q_n q_{n-1} ) r_{n - 2}</mrow>
          <mrow>&amp; \vdots</mrow>
          <mrow>&amp; = ra + sb</mrow>
        </md>.
        The algorithm that we have just used to find the greatest common divisor <m>d</m> of two integers <m>a</m> and <m>b</m> and to write <m>d</m> as the linear combination of <m>a</m> and <m>b</m> is known as the
        <idx><h>Euclidean algorithm</h></idx><idx><h>Algorithm</h><h>Euclidean</h></idx><term>Euclidean algorithm</term>.
      </p>
    </subsection>

    <subsection xml:id="integers-subsection-prime-numbers">
      <title>Prime Numbers</title>
      <p>
        Let <m>p</m> be an integer such that <m>p \gt 1</m>.
        We say that <m>p</m> is a <term>prime number</term>,<idx><h>Prime integer</h></idx>
        or simply <m>p</m> is <term>prime</term>,
        if the only positive numbers that divide <m>p</m> are <m>1</m> and <m>p</m> itself.
        An integer <m>n \gt 1</m> that is not prime is said to be <idx><h>Composite integer</h></idx><term>composite</term>.
      </p>

      <lemma xml:id="integers-theorem-prime-divisor">
        <title>Euclid</title>
        <statement>
          <p>
            Let <m>a</m> and <m>b</m> be integers and <m>p</m> be a prime number.
            If <m>p \mid ab</m>, then either <m>p \mid a</m> or <m>p \mid b</m>.
          </p>
        </statement>

        <proof>
          <p>
            Suppose that <m>p</m> does not divide <m>a</m>.
            We must show that <m>p \mid b</m>.
            Since <m>\gcd( a, p ) = 1</m>,
            there exist integers <m>r</m> and <m>s</m> such that <m>ar + ps = 1</m>.
            So
            <me>
              b = b(ar + ps) = (ab)r + p(bs)
            </me>.
            Since <m>p</m> divides both <m>ab</m> and itself,
            <m>p</m> must divide <m>b = (ab)r + p(bs)</m>.
          </p>
        </proof>
      </lemma>

      <theorem xml:id="integers-theorem-infinite-primes">
        <title>Euclid</title>
        <statement>
          <p>
            There exist an infinite number of primes.
          </p>
        </statement>

        <proof>
          <p>
            We will prove this theorem by contradiction.
            Suppose that there are only a finite number of primes,
            say <m>p_1, p_2, \ldots, p_n</m>.
            Let <m>P = p_1 p_2 \cdots p_n + 1</m>.
            Then <m>P</m> must be divisible by some <m>p_i</m> for <m>1 \leq i \leq n</m>.
            In this case, <m>p_i</m> must divide
            <m>P - p_1 p_2 \cdots p_n = 1</m>, which is a contradiction.
            Hence, either <m>P</m> is prime or there exists an additional prime number
            <m>p \neq p_i</m> that divides <m>P</m>.
          </p>
        </proof>
      </theorem>
            <!-- Error in proof fixed.  Suggested by R. Rossi.  TWJ 12/19/2011 -->
      <theorem xml:id="integers-theorem-fund-theorem-arithmetic">
        <title>Fundamental Theorem of Arithmetic</title>
        <idx>
        <h>Fundamental Theorem</h>
        <h>of Arithmetic</h>
        </idx>
        <statement>
          <p>
            Let <m>n</m> be an integer such that <m>n \gt 1</m>.
            Then
            <me>
              n = p_1 p_2 \cdots p_k
            </me>,
            where <m>p_1, \ldots, p_k</m> are  primes
            (not necessarily distinct).
            Furthermore, this factorization is unique; that is, if
            <me>
              n = q_1 q_2 \cdots q_l
            </me>,
            then <m>k = l</m> and the <m>q_i</m>'s are just the <m>p_i</m>'s rearranged.
          </p>
        </statement>

        <proof>
          <case>
            <title>Uniqueness</title>
            <p>
              To show uniqueness we will use induction on <m>n</m>.
              The theorem is certainly true for <m>n = 2</m> since in this case <m>n</m> is prime.
              Now assume that the result holds for all integers <m>m</m> such that <m>1 \leq m \lt n</m>, and
              <me>
                n = p_1 p_2 \cdots p_k = q_1 q_2 \cdots q_l
              </me>,
              where <m>p_1 \leq p_2 \leq \cdots \leq p_k</m> and <m>q_1 \leq q_2 \leq \cdots \leq q_l</m>.
              By <xref ref="integers-theorem-prime-divisor"/>, <m>p_1  \mid  q_i</m> for some
              <m>i = 1, \ldots,
              l</m> and <m>q_1  \mid  p_j</m> for some <m>j = 1, \ldots, k</m>.
              Since all of the <m>p_i</m>'s and <m>q_i</m>'s are prime,
              <m>p_1 = q_i</m> and  <m>q_1 = p_j</m>.
              Hence, <m>p_1 = q_1</m> since <m>p_1 \leq p_j = q_1 \leq q_i = p_1</m>.
              By the induction hypothesis,
              <me>
                n' = p_2 \cdots p_k = q_2 \cdots q_l
              </me>
              has a unique factorization.
              Hence, <m>k = l</m> and <m>q_i = p_i</m> for <m>i = 1, \ldots, k</m>.
            </p>
          </case>

          <case>
            <title>Existence</title>
            <p>
              To show existence,
              suppose that there is some integer that cannot be written as the product of primes.
              Let <m>S</m> be the set of all such numbers.
              By the Principle of Well-Ordering,
              <m>S</m> has a smallest number, say <m>a</m>.
              If the only positive factors of <m>a</m> are <m>a</m> and <m>1</m>,
              then <m>a</m> is prime, which is a contradiction.
              Hence, <m>a = a_1 a_2</m> where
              <m>1 \lt a_1 \lt a</m> and <m>1 \lt a_2 \lt a</m>.
              Neither <m>a_1\in S</m> nor <m>a_2 \in S</m>,
              since <m>a</m> is the smallest element in <m>S</m>.
              So
              <md>
                <mrow>a_1 &amp; = p_1 \cdots p_r</mrow>
                <mrow>a_2 &amp; = q_1 \cdots q_s</mrow>
              </md>.
              Therefore,
              <me>
                a = a_1 a_2 = p_1 \cdots p_r q_1 \cdots q_s
              </me>.
              So <m>a \notin S</m>, which is a contradiction.
            </p>
          </case>
        </proof>
      </theorem>
    </subsection>

    <subsection xml:id="integers-subsection-historical-note">
      <title>Historical Note</title>
      <p>
        Prime numbers were first studied by the ancient Greeks.
        Two important results from antiquity are Euclid's proof that an infinite number of primes exist and the Sieve of Eratosthenes,
        a method of computing all of the prime numbers less than a fixed positive integer <m>n</m>.
        One problem in number theory is to find a function <m>f</m> such that <m>f(n)</m> is prime for each integer <m>n</m>.
        Pierre Fermat (1601?<ndash/>1665) conjectured that
        <m>2^{2^n} + 1</m> was prime for all <m>n</m>,
        but later it was shown by Leonhard Euler (1707<ndash/>1783) that
        <me>
          2^{2^5} + 1 = 4{,}294{,}967{,}297
        </me>
        is a composite number.
        One of the many unproven conjectures about prime numbers is Goldbach's Conjecture.
        In a letter to Euler in 1742, Christian Goldbach stated the conjecture that every even integer with the exception of <m>2</m> seemed to be the sum of two primes:
        <m>4 = 2 + 2</m>, <m>6 = 3 + 3</m>,
        <m>8 =3 + 5</m>, <m>\ldots</m>.
        Although the conjecture has been verified for the numbers up through <m>4 \times 10^{18}</m>,
        it has yet to be proven in general.
        Since prime numbers play an important role in public key cryptography,
        there is currently a great deal of interest in determining whether or not a large number is prime.
      </p>

      <paragraphs component="sage-blurb">
        <title>Sage</title>
        <p>
          Sage's original purpose was to support research in number theory,
          so it is perfect for the types of computations with the integers that we have in this chapter.
        </p>
      </paragraphs>
    </subsection>
        <!--Updated the numbers for which Goldbach's conjcture has been verified.  TWJ 4/7/2014-->
  </section>

    <reading-questions>

    <exercise>
      <statement>
        <p>
          Use Sage to express <m>123456792</m> as a product of prime numbers.
        </p>
      </statement>
      <response/>
    </exercise>

    <exercise>
      <statement>
        <p>
          Find the greatest common divisor of <m>84</m> and <m>52</m>.
        </p>
      </statement>
      <response/>
    </exercise>

    <exercise>
      <statement>
        <p>
          Find integers <m>r</m> and <m>s</m> so that <m>r(84)+s(52)=\gcd(84,52)</m>.
        </p>
      </statement>
      <response/>
    </exercise>

    <exercise>
      <statement>
        <p>
          Explain the use of the term <q>induction hypothesis.</q>
        </p>
      </statement>
      <response/>
    </exercise>

    <exercise>
      <statement>
        <p>
          What is Goldbach's Conjecture?
          And why is it called a <q>conjecture</q>?
        </p>
      </statement>
      <response/>
    </exercise>

  </reading-questions>
    <!-- Exercises with Solutions  -->
    <!-- File: integers.xml  -->
    <!-- Title: The Integers -->
  <exercises xml:id="integers-exercises" filenamebase="integers">
    <title>Exercises</title>

    <exercise number="1" xml:id="integers-exercise-pmi-sum-squares">
      <statement>
        <p>
          Prove that
          <me>
            1^2 + 2^2 + \cdots + n^2 = \frac{n(n + 1)(2n + 1)}{6}
          </me>
          for <m>n \in {\mathbb N}</m>.
        </p>
      </statement>
      <hint>
        <p>
          The base case,
          <m>S(1): [1(1 + 1)(2(1) + 1)]/6 = 1 = 1^2</m> is true.
          Assume that <m>S(k): 1^2 + 2^2 + \cdots + k^2 = [k(k + 1)(2k + 1)]/6</m> is true.
          Then
          <md>
            <mrow>1^2 + 2^2 + \cdots + k^2 + (k + 1)^2 &amp; = [k(k + 1)(2k + 1)]/6 + (k + 1)^2</mrow>
            <mrow>&amp; = [(k + 1)((k + 1) + 1)(2(k + 1) + 1)]/6</mrow>
          </md>,
          and so <m>S(k + 1)</m> is true.
          Thus, <m>S(n)</m> is true for all positive integers <m>n</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="2" xml:id="integers-exercise-pmi-sum-cubes">
      <statement>
        <p>
          Prove that
          <me>
            1^3 + 2^3 + \cdots + n^3 = \frac{n^2(n + 1)^2}{4}
          </me>
          for <m>n \in {\mathbb N}</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="3" xml:id="integers-exercise-pmi-factorial">
      <statement>
        <p>
          Prove that <m>n! \gt 2^n</m> for <m>n \geq 4</m>.
        </p>
      </statement>
      <hint>
        <p>
          The base case, <m>S(4): 4! = 24 \gt 16 =2^4</m> is true.
          Assume <m>S(k): k! \gt 2^k</m> is true.
          Then <m>(k + 1)! = k! (k + 1) \gt 2^k \cdot 2 = 2^{k + 1}</m>,
          so <m>S(k + 1)</m> is true.
          Thus, <m>S(n)</m> is true for all positive integers <m>n</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="4" xml:id="integers-exercise-pmi-odd-times-x">
      <statement>
        <p>
          Prove that
          <me>
            x + 4x + 7x + \cdots + (3n - 2)x = \frac{n(3n - 1)x}{2}
          </me>
          for <m>n \in {\mathbb N}</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="5" xml:id="integers-exercise-pmi-divisible-by-3">
      <statement>
        <p>
          Prove that <m>10^{n + 1} + 10^n + 1</m> is divisible by <m>3</m> for <m>n \in {\mathbb N}</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="6" xml:id="integers-exercise-pmi-divisible-by-99">
      <statement>
        <p>
          Prove that <m>4 \cdot 10^{2n} + 9 \cdot 10^{2n - 1} + 5</m> is divisible by <m>99</m> for <m>n \in {\mathbb N}</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="7" xml:id="integers-exercise-pmi-geometric-arithmetic-mean">
      <statement>
        <p>
          Show that
          <me>
            \sqrt[n]{a_1 a_2 \cdots a_n} \leq \frac{1}{n} \sum_{k = 1}^{n} a_k
          </me>.
        </p>
      </statement>
    </exercise>

    <exercise number="8" xml:id="integers-exercise-pmi-leibniz">
      <statement>
        <p>
          Prove the Leibniz rule for <m>f^{(n)} (x)</m>,
          where <m>f^{(n)}</m> is the <m>n</m>th derivative of <m>f</m>; that is,
          show that
          <me>
            (fg)^{(n)}(x) = \sum_{k = 0}^{n} \binom{n}{k} f^{(k)}(x) g^{(n - k)}(x)
          </me>.
        </p>
      </statement>
      <hint>
        <p>
          Follow the proof in <xref ref="integers-example-binomial-theorem"/>.
        </p>
      </hint>
    </exercise>

    <exercise number="9" xml:id="integers-exercise-pmi-sum-powers-of-2">
      <statement>
        <p>
          Use induction to prove that
          <m>1 + 2 + 2^2 + \cdots + 2^n = 2^{n + 1} - 1</m> for <m>n \in {\mathbb N}</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="10" xml:id="integers-exercise-pmi-sum-n-over-n-plus-one">
      <statement>
        <p>
          Prove that
          <me>
            \frac{1}{2}+ \frac{1}{6} + \cdots + \frac{1}{n(n + 1)} = \frac{n}{n + 1}
          </me>
          for <m>n \in {\mathbb N}</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="11" xml:id="integers-exercise-pmi-less-than-nx">
      <statement>
        <p>
          If <m>x</m> is a nonnegative real number,
          then show that <m>(1 + x)^n - 1 \geq nx</m> for <m>n = 0, 1, 2, \ldots</m>.
        </p>
      </statement>
      <hint>
        <p>
          The base case,
          <m>S(0): (1 + x)^0 - 1 = 0 \geq 0 = 0 \cdot x</m> is true.
          Assume <m>S(k): (1 + x)^k -1 \geq kx</m> is true.
          Then
          <md>
            <mrow>(1 + x)^{k + 1} - 1 &amp; = (1 + x)(1 + x)^k -1</mrow>
            <mrow>&amp; = (1 + x)^k + x(1 + x)^k - 1</mrow>
            <mrow>&amp; \geq kx + x(1 + x)^k</mrow>
            <mrow>&amp; \geq kx + x</mrow>
            <mrow>&amp; = (k + 1)x</mrow>
          </md>,
          so <m>S(k + 1)</m> is true.
          Therefore, <m>S(n)</m> is true for all positive integers <m>n</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="12" xml:id="integers-exercise-power-sets">
      <title>Power Sets</title>
      <statement>
        <p>
          Let <m>X</m> be a set.
          Define the <term>power set</term> of <m>X</m>,
          denoted <m>{\mathcal P}(X)</m>,
          to be the set of all subsets  of <m>X</m>.

          <notation>
            <usage><m>\mathcal P(X)</m></usage>
            <description>power set of <m>X</m></description>
          </notation>

          For example,
          <me>
            {\mathcal P}( \{a, b\} ) = \{ \emptyset, \{a\}, \{b\}, \{a, b\} \}
          </me>.
          For every positive integer <m>n</m>,
          show that a set with exactly <m>n</m> elements has a power set with exactly <m>2^n</m> elements.
        </p>
      </statement>
    </exercise>

    <exercise number="13" xml:id="integers-exercise-pmi-equivalent">
      <statement>
        <p>
          Prove that the two principles of mathematical induction stated in <xref ref="integers-section-math-induction"/> are equivalent.
        </p>
      </statement>
    </exercise>

    <exercise number="14" xml:id="integers-exercise-smallest-natural-number">
      <statement>
        <p>
          Show that the Principle of Well-Ordering for the natural numbers implies that 1 is the smallest natural number.
          Use this result to show that the Principle of Well-Ordering implies the Principle of Mathematical Induction;
          that is, show that if <m>S \subset {\mathbb N}</m> such that <m>1 \in S</m> and
          <m>n + 1 \in S</m> whenever <m>n \in S</m>,
          then <m>S = {\mathbb N}</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="15" xml:id="integers-exercise--gcd-linear-combination">
      <statement>
        <p>
          For each of the following pairs of numbers <m>a</m> and <m>b</m>,
          calculate <m>\gcd(a,b)</m> and find integers <m>r</m> and <m>s</m> such that <m>\gcd(a,b) = ra + sb</m>.

          <ol cols="2">
            <li>
              <p>
                <m>14</m> and <m>39</m>
              </p>
            </li>

            <li>
              <p>
                <m>234</m> and <m>165</m>
              </p>
            </li>

            <li>
              <p>
                <m>1739</m> and <m>9923</m>
              </p>
            </li>

            <li>
              <p>
                <m>471</m> and <m>562</m>
              </p>
            </li>

            <li>
              <p>
                <m>23771</m> and <m>19945</m>
              </p>
            </li>

            <li>
              <p>
                <m>-4357</m> and <m>3754</m>
              </p>
            </li>
          </ol>
        </p>
      </statement>
    </exercise>

    <exercise number="16" xml:id="integers-exercise-gcd-1">
      <statement>
        <p>
          Let <m>a</m> and <m>b</m> be nonzero integers.
          If there exist integers <m>r</m> and <m>s</m> such that <m>ar + bs =1</m>,
          show that <m>a</m> and <m>b</m> are relatively prime.
        </p>
      </statement>
    </exercise>

    <!--Todo Check references to the Fibonacci numbers-->

    <exercise number="17" xml:id="integers-exercise-fibonacci">
      <title>Fibonacci Numbers</title>
      <statement>
        <p>
          The Fibonacci numbers are
          <me>
            1, 1, 2, 3, 5, 8, 13, 21, \ldots
          </me>.
          We can define them inductively by <m>f_1 = 1</m>, <m>f_2 = 1</m>,
          and <m>f_{n + 2} = f_{n + 1} + f_n</m> for <m>n \in {\mathbb N}</m>.

          <ol>
            <li>
              <p>
                Prove that <m>f_n \lt 2^n</m>.
              </p>
            </li>

            <li>
              <p>
                Prove that <m>f_{n + 1} f_{n - 1} = f^2_n + (-1)^n</m>,
                <m>n \geq 2</m>.
              </p>
            </li>

            <li>
              <p>
                Prove that <m>f_n = [(1 + \sqrt{5}\, )^n - (1 - \sqrt{5}\, )^n]/ 2^n \sqrt{5}</m>.
              </p>
            </li>

            <li>
              <p>
                Show that <m>\phi = \lim_{n \rightarrow \infty}  f_{n + 1} / f_n  = (\sqrt{5} + 1)/2</m>.  The constant <m>\phi</m> is known as the <term>golden ratio</term>.
              </p>
            </li>

            <li>
              <p>
                Prove that <m>f_n</m> and <m>f_{n + 1}</m> are relatively prime.
              </p>
            </li>
          </ol>
        </p>
      </statement>
      <hint>
        <p>
          For (a) and (b) use mathematical induction. (c) Show that <m>f_1 = 1</m>,
          <m>f_2 = 1</m>,
          and <m>f_{n + 2} = f_{n + 1} + f_n</m>. (e) Use part (b) and <xref ref="integers-exercise-gcd-1"/>.
        </p>
      </hint>
    </exercise>

    <exercise number="18" xml:id="integers-exercise-coprime-gcd-as-rb-rs">
      <statement>
        <p>
          Let <m>a</m> and <m>b</m> be integers such that <m>\gcd(a,b) = 1</m>.
          Let <m>r</m> and <m>s</m> be integers such that <m>ar + bs = 1</m>.
          Prove that
          <me>
            \gcd(a,s) = \gcd(r,b) = \gcd(r,s) =  1
          </me>.
        </p>
      </statement>
    </exercise>

    <exercise number="19" xml:id="integers-exercise-coprime-perfect-squares">
      <statement>
        <p>
          Let <m>x, y \in {\mathbb N}</m> be relatively prime.
          If <m>xy</m> is a perfect square,
          prove that <m>x</m> and <m>y</m> must both be perfect squares.
        </p>
      </statement>
      <hint>
        <p>
          Use the Fundamental Theorem of Arithmetic.
        </p>
      </hint>
    </exercise>

    <exercise number="20" xml:id="integers-exercise-perfect-square-4k">
      <statement>
        <p>
          Using the division algorithm,
          show that every perfect square is of the form <m>4k</m> or <m>4k + 1</m> for some nonnegative integer <m>k</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="21" xml:id="integers-exercise-relatively-prime-squares">
      <statement>
        <p>
          Suppose that <m>a, b, r, s</m> are pairwise relatively prime and that
          <md>
            <mrow>a^2 + b^2 &amp; = r^2</mrow>
            <mrow>a^2 - b^2 &amp; = s^2</mrow>
          </md>.
          Prove that <m>a</m>, <m>r</m>,
          and <m>s</m> are odd and <m>b</m> is even.
        </p>
      </statement>
    </exercise>

    <exercise number="22" xml:id="integers-exercise-Zn-conguence">
      <statement>
        <p>
          Let <m>n \in {\mathbb N}</m>.
          Use the division algorithm to prove that every integer is congruent mod <m>n</m> to precisely one of the integers <m>0, 1, \ldots, n-1</m>.
          Conclude that if <m>r</m> is an integer,
          then there is exactly one <m>s</m> in <m>{\mathbb Z}</m> such that
          <m>0 \leq s \lt n</m> and <m>[r] = [s]</m>.
          Hence, the integers are indeed partitioned by congruence mod <m>n</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="23" xml:id="integers-exercise-lcm">
      <statement>
        <p>
          Define the <term>least common multiple</term>
          of two nonzero integers <m>a</m> and <m>b</m>,
          denoted by <m>\lcm(a,b)</m>,
          to be the nonnegative integer <m>m</m> such that both <m>a</m> and <m>b</m> divide <m>m</m>,
          and if <m>a</m> and <m>b</m> divide any other integer <m>n</m>,
          then <m>m</m> also divides <m>n</m>.

          <notation>
            <usage><m>\lcm(m,n)</m></usage>
            <description>the least common multiple of <m>m</m> and <m>n</m></description>
          </notation>

          Prove there exists a unique least common multiple for any two integers <m>a</m> and <m>b</m>.
        </p>
      </statement>
      <hint>
        <p>
          Use the Principle of Well-Ordering and the division algorithm.
        </p>
      </hint>
    </exercise>

    <exercise number="24" xml:id="integers-exercise-lcm-gcd">
      <statement>
        <p>
          If <m>d= \gcd(a, b)</m> and <m>m = \lcm(a, b)</m>,
          prove that <m>dm = |ab|</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="25" xml:id="integers-exercise-coprime-lcd">
      <statement>
        <p>
          Show that <m>\lcm(a,b) = ab</m> if and only if <m>\gcd(a,b) = 1</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="26" xml:id="integers-exercise-gcd-products">
      <statement>
        <p>
          Prove that <m>\gcd(a,c) = \gcd(b,c) =1</m> if and only if
          <m>\gcd(ab,c) = 1</m> for integers <m>a</m>, <m>b</m>,
          and <m>c</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="27" xml:id="integers-exercise-coprime-divides-factor">
      <statement>
        <p>
          Let <m>a, b, c \in {\mathbb Z}</m>.
          Prove that if <m>\gcd(a,b) = 1</m> and
          <m>a \mid bc</m>, then <m>a \mid c</m>.
        </p>
      </statement>
      <hint>
        <p>
          Since <m>\gcd(a,b) = 1</m>,
          there exist integers <m>r</m> and <m>s</m> such that <m>ar + bs = 1</m>.
          Thus, <m>acr + bcs = c</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="28" xml:id="integers-exercise-2-hat-p-minus-1-prime">
      <statement>
        <p>
          Let <m>p \geq 2</m>.
          Prove that if <m>2^p - 1</m> is prime,
          then <m>p</m> must also be prime.
        </p>
      </statement>
    </exercise>

    <exercise number="29" xml:id="integers-exercise-prime-6n-plus-5">
      <statement>
        <p>
          Prove that there are an infinite number of primes of the form <m>6n + 5</m>.
        </p>
      </statement>
      <hint>
        <p>
          Every prime must be of the form <m>2</m>, <m>3</m>,
          <m>6n + 1</m>, or <m>6n + 5</m>.
          Suppose there are only finitely many primes of the form <m>6k + 5</m>.
        </p>
      </hint>
    </exercise>

    <exercise number="30" xml:id="integers-exercise-infinite-primes-4n-1">
      <statement>
        <p>
          Prove that there are an infinite number of primes of the form <m>4n - 1</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="31" xml:id="integers-exercise-sqrt-2-irrational">
      <statement>
        <p>
          Using the fact that <m>2</m> is prime,
          show that there do not exist integers <m>p</m> and <m>q</m> such that <m>p^2 = 2 q^2</m>.
          Demonstrate that therefore
          <m>\sqrt{2}</m> cannot be a rational number.
        </p>
      </statement>
    </exercise>

  </exercises>
  <exercises xml:id="integers-exercises-programming">
    <title>Programming Exercises</title>

    <exercise xml:id="integers-exercise-eratosthenes">
      <title>The Sieve of Eratosthenes</title>
      <idx>
      <h>Sieve of Eratosthenes</h>
      </idx>
      <statement>
        <p>
          One method of computing all of the prime numbers less than a certain fixed positive integer <m>N</m> is to list all of the numbers <m>n</m> such that <m>1 \lt n \lt N</m>.
          Begin by eliminating all of the multiples of <m>2</m>.
          Next eliminate all of the multiples of <m>3</m>.
          Now eliminate all of the multiples of <m>5</m>.
          Notice that <m>4</m> has already been crossed out.
          Continue in this manner,
          noticing that we do not have to go all the way to <m>N</m>;
          it suffices to stop at <m>\sqrt{N}</m>.
          Using this method,
          compute all of the prime numbers less than <m>N = 250</m>.
          We can also use this method to find all of the integers that are relatively prime to an integer <m>N</m>.
          Simply eliminate the prime factors of <m>N</m> and all of their multiples.
          Using this method,
          find all of the numbers that are relatively prime to <m>N= 120</m>.
          Using the Sieve of Eratosthenes,
          write a program that will compute all of the primes less than an integer <m>N</m>.
        </p>
      </statement>
    </exercise>

    <exercise xml:id="integers-exercise-ackermann">
      <idx>
      <h>Ackermann's function</h>
      </idx>
      <statement>
        <p>
          Let <m>{\mathbb N}^0 = {\mathbb N} \cup \{ 0 \}</m>.
          Ackermann's function is the function
          <m>A :{\mathbb N}^0 \times {\mathbb N}^0 \rightarrow {\mathbb N}^0</m> defined by the equations
          <md>
            <mrow>A(0, y) &amp; = y + 1,</mrow>
            <mrow>A(x + 1, 0) &amp; = A(x, 1),</mrow>
            <mrow>A(x + 1, y + 1) &amp; = A(x, A(x + 1, y))</mrow>
          </md>.
          Use this definition to compute <m>A(3, 1)</m>.
          Write a program to evaluate Ackermann's function.
          Modify the  program to count the number of statements executed in the program when Ackermann's function is evaluated.
          How many statements are executed in the evaluation of <m>A(4, 1)</m>?
          What about <m>A(5, 1)</m>?
        </p>
      </statement>
    </exercise>

    <exercise xml:id="integers-exercise-program-euclidean-algorithm">
      <statement>
        <p>
          Write a computer program that will implement the Euclidean algorithm.
          The program should accept two positive integers <m>a</m> and <m>b</m> as input and should output
          <m>\gcd( a,b)</m> as well as integers <m>r</m> and <m>s</m> such that
          <me>
            \gcd( a,b) = ra + sb
          </me>.
        </p>
      </statement>
    </exercise>

  </exercises>
  <!--Todo Fix intro to references-->

  <references xml:id="integers-references">
    <title>References and Suggested Readings</title>
        <!-- References updated - TWJ 5/4/2010 -->
        <!--			<p>References [2], [3], and [4] are good sources for elementary number
theory.</p> -->
    <biblio type="raw">
<!-- was [1] -->
      Brookshear, J. G.
      <title>Theory of Computation: Formal Languages, Automata, and Complexity</title>.  Benjamin/Cummings, Redwood City, CA, 1989. Shows the relationships of the theoretical aspects of computer science to set theory and the integers.
    </biblio>

    <biblio type="raw">
<!-- was [2] --><!-- Updated - TWJ 5/4/2010 -->
      Hardy, G. H. and Wright, E. M.
      <title>An Introduction to the Theory of Numbers</title>.  6th ed. Oxford University Press, New York, 2008.
    </biblio>

    <biblio type="raw">
<!-- was [3] --><!-- Checked reference - TWJ 5/4/2010 -->
      Niven, I. and Zuckerman, H. S.
      <title>An Introduction to the Theory of Numbers</title>.  5th ed. Wiley, New York, 1991.
    </biblio>

    <biblio type="raw">
<!-- was [4] --><!-- Checked reference - TWJ 5/4/2010 -->
      Vanden Eynden, C.
      <title>Elementary Number Theory</title>. 2nd ed.  Waveland Press, Long Grove IL, 2001.
    </biblio>
  </references>



  <section xml:id="integers-sage" component="sage-info">
    <title>Sage</title>
    <introduction>
      <p>
        Many properties of the algebraic objects we will study can be determined from properties of associated integers.
        And Sage has many powerful functions for analyzing integers.
      </p>
    </introduction>

    <subsection>
      <title>Division Algorithm</title>
      <p>
        The code <c>a % b</c> will return the remainder upon division of <m>a</m> by <m>b</m>.
        In other words,
        the result is the unique integer <m>r</m> such that (1) <m>0\leq r\lt b</m>,
        and (2) <m>a=bq+r</m> for some integer <m>q</m>
        (the quotient),
        as guaranteed by the Division Algorithm (<xref ref="integers-theorem-division_algorithm"/>).
        Then <m>(a-r)/b</m> will equal <m>q</m>.
        For example,
      </p>

            <sage>
                <input>
            r = 14 % 3
            r
            </input>
                <output>2</output>
            </sage>
            <sage>
                <input>
            q = (14 - r)/3
            q
            </input>
                <output>4</output>
            </sage>

      <p>
        It is also possible to get both the quotient and remainder at the same time with the <c>.quo_rem()</c> method
        (quotient and remainder).
      </p>

            <sage>
                <input>
            a = 14
            b = 3
            a.quo_rem(b)
            </input>
                <output>(4, 2)</output>
            </sage>

      <p>
        A remainder of zero indicates divisibility.
        So <c>(a % b) == 0</c> will return <c>True</c> if <m>b</m> divides <m>a</m>,
        and will otherwise return <c>False</c>.
      </p>

            <sage>
                <input>(20 % 5) == 0</input>
                <output>True</output>
            </sage>
            <sage>
                <input>(17 % 4) == 0</input>
                <output>False</output>
            </sage>

      <p>
        The <c>.divides()</c> method is another option.
      </p>

            <sage>
                <input>
            c = 5
            c.divides(20)
            </input>
                <output>True</output>
            </sage>
            <sage>
                <input>
            d = 4
            d.divides(17)
            </input>
                <output>False</output>
            </sage>
    </subsection>

    <subsection>
      <title>Greatest Common Divisor</title>
      <p>
        The greatest common divisor of <m>a</m> and <m>b</m> is obtained with the command <c>gcd(a, b)</c>,
        where in our first uses, <m>a</m> and <m>b</m> are integers.
        Later, <m>a</m> and <m>b</m> can be other objects with a notion of divisibility and
        <q>greatness,</q> such as polynomials.
        For example,
      </p>

            <sage>
                <input>gcd(2776, 2452)</input>
                <output>4</output>
            </sage>

      <p>
        We can use the <c>gcd</c> command to determine if a pair of integers are relatively prime.
      </p>

            <sage>
                <input>
            a = 31049
            b = 2105
            gcd(a, b) == 1
            </input>
                <output>True</output>
            </sage>
            <sage>
                <input>
            a = 3563
            b = 2947
            gcd(a, b) == 1
            </input>
                <output>False</output>
            </sage>

      <p>
        The command <c>xgcd(a,b)</c>(<q>eXtended GCD</q>) returns a triple where the first element is the greatest common divisor of <m>a</m> and <m>b</m> (as with the <c>gcd(a,b)</c> command above),
        but the next two elements are values of <m>r</m> and <m>s</m> such that <m>ra+sb=\gcd(a,b)</m>.
      </p>

            <sage>
                <input>xgcd(633,331)</input>
                <output>(1, -137, 262)</output>
            </sage>

      <p>
        Portions of the triple can be extracted using <c>[ ]</c>(<q>indexing</q>) to access the entries of the triple,
        starting with the first as number <c>0</c>.
        For example,
        the following should always return the result <c>True</c>,
        even if you change the values of <c>a</c> and <c>b</c>.
        Try changing the values of <c>a</c> and <c>b</c> below,
        to see that the result is always <c>True</c>.
      </p>

            <sage>
                <input>
            a = 633
            b = 331
            extended = xgcd(a, b)
            g = extended[0]
            r = extended[1]
            s = extended[2]
            g == r*a + s*b
            </input>
                <output>True</output>
            </sage>

      <p>
        Studying this block of code will go a long way towards helping you get the most out of Sage's output.
        Note that <c>=</c> is how a value is
        <em>assigned</em> to a variable,
        while as in the last line,
        <c>==</c> is how we compare two items for <em>equality</em>.
      </p>
    </subsection>

    <subsection>
      <title>Primes and Factoring</title>
      <p>
        The method <c>.is_prime()</c> will determine if an integer is prime or not.
      </p>

            <sage>
                <input>
            a = 117371
            a.is_prime()
            </input>
                <output>True</output>
            </sage>
            <sage>
                <input>
            b = 14547073
            b.is_prime()
            </input>
                <output>False</output>
            </sage>
            <sage>
                <input>b == 1597 * 9109</input>
                <output>True</output>
            </sage>

      <p>
        The command <c>random_prime(a, proof=True)</c> will generate a random prime number between <m>2</m> and <m>a</m>.
        Experiment by executing the following two compute cells several times.
        (Replacing <c>proof=True</c> by <c>proof=False</c> will speed up the search,
        but there will be a very, very,
        very small probability the result will not be prime.)
      </p>

            <sage doctest="random">
                <input>
            a = random_prime(10^21, proof=True)
            a
            </input>
                <output>424729101793542195193</output>
            </sage>
            <sage>
                <input>a.is_prime()</input>
                <output>True</output>
            </sage>

      <p>
        The command <c>prime_range(a, b)</c> returns an ordered list of all the primes from <m>a</m> to <m>b-1</m>,
        inclusive.
        For example,
      </p>

            <sage>
                <input>prime_range(500, 550)</input>
                <output>[503, 509, 521, 523, 541, 547]</output>
            </sage>

      <p>
        The commands <c>next_prime(a)</c> and <c>previous_prime(a)</c> are other ways to get a single prime number of a desired size.
        Give them a try below if you have an empty compute cell there
        (as you will if you are reading in the Sage Notebook,
        or are reading the online version). (The hash symbol, <c>#</c>,
        is used to indicate a <q>comment</q> line,
        which will not be evaluated by Sage.
        So erase this line, or start on the one below it.)
      </p>

      <sage type="practice"/>

      <p>
        In addition to checking if integers are prime or not,
        or generating prime numbers, Sage can also decompose any integer into its prime factors,
        as described by the Fundamental Theorem of Arithmetic (<xref ref="integers-theorem-fund-theorem-arithmetic"/>).
      </p>

            <sage>
                <input>
            a = 2600
            a.factor()
            </input>
                <output>2^3 * 5^2 * 13</output>
            </sage>

      <p>
        So <m>2600 = 2^3\times 5^2\times 13</m> and this is the unique way to write <m>2600</m> as a product of prime numbers
        (other than rearranging the order of the primes themselves in the product).
      </p>

      <p>
        While Sage will print a factorization nicely,
        it is carried internally as a list of pairs of integers,
        with each pair being a base (a prime number) and an exponent (a positive integer).
        Study the following carefully,
        as it is another good exercise in working with Sage output in the form of lists.
      </p>

            <sage>
                <input>
            a = 2600
            factored = a.factor()
            first_term = factored[0]
            first_term
            </input>
                <output>(2, 3)</output>
            </sage>
            <sage>
                <input>
            second_term = factored[1]
            second_term
            </input>
                <output>(5, 2)</output>
            </sage>
            <sage>
                <input>
            third_term = factored[2]
            third_term
            </input>
                <output>(13, 1)</output>
            </sage>
            <sage>
                <input>
            first_prime = first_term[0]
            first_prime
            </input>
                <output>2</output>
            </sage>
            <sage>
                <input>
            first_exponent = first_term[1]
            first_exponent
            </input>
                <output>3</output>
            </sage>

      <p>
        The next compute cell reveals the internal version of the factorization by asking for the actual list.
        And we show how you could determine exactly how many terms the factorization has by using the length command,
        <c>len()</c>.
      </p>

            <sage>
                <input>list(factored)</input>
                <output>[(2, 3), (5, 2), (13, 1)]</output>
            </sage>
            <sage>
                <input>len(factored)</input>
                <output>3</output>
            </sage>

      <p>
        Can you extract the next two primes,
        and their exponents, from <c>a</c>?
      </p>

      <sage type="practice"/>
    </subsection>
  </section>

  <exercises xml:id="integers-sage-exercises" component="sage-exercises">
    <title>Sage Exercises</title>
    <introduction>
      <p>
        These exercises are about investigating basic properties of the integers,
        something we will frequently do when investigating groups.
        Sage worksheets have extensive capabilities for making new cells with carefully formatted text,
        include support for <latex/> syntax to express mathematics.
        So when a question asks for explanation or commentary,
        make a new cell and communicate clearly with your audience.
      </p>
    </introduction>

    <exercise number="1" xml:id="integers-sage-exercise-next-prime">
      <statement>
        <p>
          Use the <c>next_prime()</c> command to construct two different 8-digit prime numbers and save them in variables named <c>a</c> and <c>b</c>.
        </p>
      </statement>
    </exercise>

    <exercise number="2" xml:id="integers-sage-exercise-is-prime">
      <statement>
        <p>
          Use the <c>.is_prime()</c> method to verify that your primes <c>a</c> and <c>b</c> are really prime.
        </p>
      </statement>
    </exercise>

    <exercise number="3" xml:id="integers-sage-exercise-gcd">
      <statement>
        <p>
          Verify that <m>1</m> is the greatest common divisor of your two primes from the previous exercises.
        </p>
      </statement>
    </exercise>

    <exercise number="4" xml:id="integers-sage-exercise-gcd-linear-combination">
      <statement>
        <p>
          Find two integers that make a <q>linear combination</q>
          of your two primes equal to <m>1</m>.
          Include a verification of your result.
        </p>
      </statement>
    </exercise>

    <exercise number="5" xml:id="integers-sage-exercise-prime-factorization">
      <statement>
        <p>
          Determine a factorization into powers of primes for <m>c=4\,598\,037\,234</m>.
        </p>
      </statement>
    </exercise>

    <exercise number="6" xml:id="integers-sage-exercise-divisor">
      <statement>
        <p>
          Write a compute cell that defines the same value of <c>c</c> again,
          and then defines a candidate divisor of <c>c</c> named <c>d</c>.
          The third line of the cell should return <c>True</c> if and only if <c>d</c> is a divisor of <c>c</c>.
          Illustrate the use of your cell by testing your code with <m>d=7</m> and in a new copy of the cell,
          testing your code with <m>d=11</m>.
        </p>
      </statement>
    </exercise>

  </exercises>
</chapter>
